<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Maven聚合和继承的关系</title>
      <link href="2020/12/23/ju-he-he-ji-cheng-de-guan-xi/"/>
      <url>2020/12/23/ju-he-he-ji-cheng-de-guan-xi/</url>
      
        <content type="html"><![CDATA[<h1 id="Maven聚合和继承的关系"><a href="#Maven聚合和继承的关系" class="headerlink" title="Maven聚合和继承的关系"></a>Maven聚合和继承的关系</h1><p>​    虽然聚合模块和父模块经常<strong>合二为一</strong>，但是聚合和继承是两个不同的概念，其实是没有什么关系的。</p><p><strong>聚合模块</strong>知道它聚合了哪些模块，但是被聚合的模块不知道聚合模块的存在；</p><p><strong>父模块</strong>不知道子模块的存在，但是子模块都必须知道自己的父模块是谁。</p><p>可以用下图来表示这两个不同的概念：</p><a id="more"></a><p>补充：可继承的POM元素如下（红色为常用的元素）</p><ul><li>groupId：项目组ID，项目坐标的核心元素。</li><li>version：项目版本，项目坐标的核心因素。</li><li>description：项目的描述信息。</li><li>organization：项目的组织信息。</li><li>inceptionYear：项目的创始年份。</li><li>url：项目的URL地址。</li><li>developers：项目的开发者信息。</li><li>contributors：项目的贡献者信息。</li><li>distributionManagement：项目的部署配置。</li><li>issueManagement：项目的缺陷跟踪系统信息。</li><li>ciManagement：项目的持续集成系统信息。</li><li>scm：项目的版本控制系统。</li><li>malilingLists：项目的邮件列表信息。</li><li>properties：自定义的Maven属性。</li><li>dependencies：项目的依赖配置。</li><li>dependencyManagement：项目的依赖管理配置。</li><li>repositories：项目的仓库配置。</li><li>build：包括项目的源码目录配置、输出目录配置、插件配置、插件管理配置等。</li><li>reporting：包括项目的报告输出目录配置、报告插件配置等。</li></ul><p><strong>反应堆</strong></p><p>对于单模块Maven项目而言，反应堆就是整个项目本身。而对于多模块的Maven项目，反应堆是整个项目所有模块组成的一个构建结构，包含模块之间继承与依赖的关系。模块间的依赖关系会将反应堆构成一个有向非循环图。</p><p><strong>裁剪反应堆</strong></p><p>  一般来说，我们要么构建整个项目，要么构建单个模块，但是有些时候，我们会想要仅仅构建这个完整的反应堆中的某些模块，所以我们需要裁剪反应堆。</p><p>  Maven提供的如下几条裁剪反应堆命令：</p><ul><li>-pl –projects：构建指定的模块，多个模块用,分隔，不会构建所列模块的依赖</li><li>-am alse mak：``构建模块同时构建所列模块依赖的其他模块</li><li>-amd alse make dependency：构建模块同时构建依赖当前模块的其他模块</li><li>-rf resume –from：在计算出的反应堆顺序基础上，从指定模块开始向后构建</li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分享 </tag>
            
            <tag> 导航 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Maven聚合和继承的关系</title>
      <link href="2020/12/23/maven/"/>
      <url>2020/12/23/maven/</url>
      
        <content type="html"><![CDATA[<h1 id="Maven聚合和继承的关系"><a href="#Maven聚合和继承的关系" class="headerlink" title="Maven聚合和继承的关系"></a>Maven聚合和继承的关系</h1><p>​    虽然聚合模块和父模块经常<strong>合二为一</strong>，但是聚合和继承是两个不同的概念，其实是没有什么关系的。</p><p><strong>聚合模块</strong>知道它聚合了哪些模块，但是被聚合的模块不知道聚合模块的存在；</p><p><strong>父模块</strong>不知道子模块的存在，但是子模块都必须知道自己的父模块是谁。</p><p>可以用下图来表示这两个不同的概念：</p><a id="more"></a><p>补充：可继承的POM元素如下（红色为常用的元素）</p><ul><li>groupId：项目组ID，项目坐标的核心元素。</li><li>version：项目版本，项目坐标的核心因素。</li><li>description：项目的描述信息。</li><li>organization：项目的组织信息。</li><li>inceptionYear：项目的创始年份。</li><li>url：项目的URL地址。</li><li>developers：项目的开发者信息。</li><li>contributors：项目的贡献者信息。</li><li>distributionManagement：项目的部署配置。</li><li>issueManagement：项目的缺陷跟踪系统信息。</li><li>ciManagement：项目的持续集成系统信息。</li><li>scm：项目的版本控制系统。</li><li>malilingLists：项目的邮件列表信息。</li><li>properties：自定义的Maven属性。</li><li>dependencies：项目的依赖配置。</li><li>dependencyManagement：项目的依赖管理配置。</li><li>repositories：项目的仓库配置。</li><li>build：包括项目的源码目录配置、输出目录配置、插件配置、插件管理配置等。</li><li>reporting：包括项目的报告输出目录配置、报告插件配置等。</li></ul><p><strong>反应堆</strong></p><p>对于单模块Maven项目而言，反应堆就是整个项目本身。而对于多模块的Maven项目，反应堆是整个项目所有模块组成的一个构建结构，包含模块之间继承与依赖的关系。模块间的依赖关系会将反应堆构成一个有向非循环图。</p><p><strong>裁剪反应堆</strong></p><p>  一般来说，我们要么构建整个项目，要么构建单个模块，但是有些时候，我们会想要仅仅构建这个完整的反应堆中的某些模块，所以我们需要裁剪反应堆。</p><p>  Maven提供的如下几条裁剪反应堆命令：</p><ul><li>-pl –projects：构建指定的模块，多个模块用,分隔，不会构建所列模块的依赖</li><li>-am alse mak：``构建模块同时构建所列模块依赖的其他模块</li><li>-amd alse make dependency：构建模块同时构建依赖当前模块的其他模块</li><li>-rf resume –from：在计算出的反应堆顺序基础上，从指定模块开始向后构建</li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分享 </tag>
            
            <tag> 导航 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2020/12/23/hello-world/"/>
      <url>2020/12/23/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Spring-AOP的简单概述</title>
      <link href="2020/10/03/aop/"/>
      <url>2020/10/03/aop/</url>
      
        <content type="html"><![CDATA[<h3 id="AOP"><a href="#AOP" class="headerlink" title="AOP"></a>AOP</h3><h5 id="一：AOP概述"><a href="#一：AOP概述" class="headerlink" title="一：AOP概述"></a>一：AOP概述</h5><p>OOP：以功能模块为核心，代码由上至下的顺序  纵向开发</p><p>AOP：Aspect Oriented Programming 面向切面编程。 横向开发</p><a id="more"></a><p>AOP 的优点：</p><ul><li><p>降低模块之间的耦合度。</p></li><li><p>使系统更容易扩展。</p></li><li><p>更好的代码复用。</p></li><li><p>非业务代码更加集中，不分散，便于统一管理。（显示）</p><ul><li>业务代码：功能模块要完成的任务</li><li>非业务代码：功能模块中的辅助代码（比如日志的打印，代码的运行测试）</li></ul></li><li><p>业务代码更加简洁存粹，不参杂其他代码的影响。</p></li></ul><p>AOP 是对面向对象编程的一个补充，在运行时，动态地将代码切入到类的指定方法、指定位置上的编程思想就是面向切面编程。将不同方法的同一个位置抽象成一个切面对象，对该切面对象进行编程就是 AOP。</p><h5 id="二：要点概述（要记得）"><a href="#二：要点概述（要记得）" class="headerlink" title="二：要点概述（要记得）"></a>二：要点概述（要记得）</h5><ul><li>切面：横切关注点被模块化的抽象对象。</li><li>通知：切面对象完成的工作。</li><li>目标：被通知的对象，即被横切的对象。</li><li>代理：切面、通知、目标混合之后的对象。</li><li>连接点：通知要插入业务代码的具体位置。</li><li>切点：AOP 通过切点定位到连接点。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的第一篇博客</title>
      <link href="2020/10/03/my-first-blog-post/"/>
      <url>2020/10/03/my-first-blog-post/</url>
      
        <content type="html"><![CDATA[<h1 id="入门"><a href="#入门" class="headerlink" title="入门"></a>入门</h1><p>NexT用户文档–开始使用</p><ul><li><p><a href="https://theme-next.js.org/docs/">DOCS</a></p></li><li></li><li><p>入门</p></li></ul><p><a href="https://hexo.io/">六o</a>是一个快速而强大的静态博客生成框架，它基于<a href="https://nodejs.org/">Node.js</a>。通过使用Hexo，您可以使用Markdown轻松编写文章，并且除了Markdown的语法外，还可以使用<a href="https://hexo.io/docs/tag-plugins">标签插件</a>由Hexo提供，用于简单插入特殊格式的内容。在此页面中，我们假设您已经安装了Hexo并使用它创建了一个站点。</p><p>您可以访问<a href="https://hexo.io/docs/">Hexo Docs</a>了解如何安装Hexo。确保环境中的Node.js和Hexo版本高于<a href="https://github.com/next-theme/hexo-theme-next#readme">最低要求</a> NexT主题，然后继续以下步骤。</p><a id="more"></a><h3 id="组态"><a href="#组态" class="headerlink" title="组态"></a>组态</h3><p>Hexo使用了两个主要的配置文件，都称为<code>_config.yml</code>：</p><ol><li>第一个在 站点根目录，其中包含Hexo的配置。</li><li>第二个在 主题根目录，由NexT提供，包含主题的配置。</li></ol><p>我们称第一个- 站点配置文件和第二个– 主题配置文件。<br>但是，我们不建议直接修改主题配置文件。通过升级NexT主题时，它经常会陷入冲突状态<code>git pull</code>，或者在升级到新版本时，需要手动合并配置。对于Hexo 5.0或更高版本，可以通过npm安装主题，并且修改主题也很困难。主题配置文件在中<code>node_modules</code>。</p><p>为了解决此问题，我们建议使用“<a href="https://theme-next.js.org/docs/getting-started/configuration.html">备用主题配置”</a>功能来配置主题NexT。</p><h3 id="NexT安装"><a href="#NexT安装" class="headerlink" title="NexT安装"></a>NexT安装</h3><p>安装Hexo主题很容易：您只需下载NexT主题，然后将主题文件夹复制到以下<code>themes</code>目录中站点根目录 并在 站点配置文件 你的 主题根目录。具体步骤如下：</p><h4 id="下载NexT"><a href="#下载NexT" class="headerlink" title="下载NexT"></a>下载NexT</h4><ul><li><a href="https://theme-next.js.org/docs/getting-started/#downloading-next-1">使用 <code>npm</code></a></li><li><a href="https://theme-next.js.org/docs/getting-started/#downloading-next-2">使用 <code>git</code></a></li><li><a href="https://theme-next.js.org/docs/getting-started/#downloading-next-3">下载压缩文件</a></li></ul><p>如果您使用的是Hexo 5.0或更高版本，则最简单的安装方法是通过npm。</p><p>打开终端，更改为Hexo 站点根目录 并安装NexT主题：</p><pre><code>$ cd hexo-site $ npm install hexo-theme-next</code></pre><p>如果需要其他安装版本，也可以阅读<a href="https://theme-next.js.org/docs/getting-started/installation.html">详细的安装说明</a>。</p><p>如果您仍在使用NexT版本5，则可以阅读<a href="https://theme-next.js.org/docs/getting-started/update-from-v5.html">有关从v5升级到v8的说明</a>。</p><h4 id="启用NexT"><a href="#启用NexT" class="headerlink" title="启用NexT"></a>启用NexT</h4><p>像所有Hexo主题一样，下载后，打开 站点配置文件，找到<code>theme</code>部分，然后将其值更改为<code>next</code>（或另一个主题目录名称）。</p><pre><code>hexo / _config.yml主题： 下一个</code></pre><p>现在，您已经安装了NexT主题并启用了它。以下步骤将帮助您验证是否正确启用了NexT。</p><h4 id="检查NexT"><a href="#检查NexT" class="headerlink" title="检查NexT"></a>检查NexT</h4><p>建议先<code>hexo clean</code>清理Hexo的缓存。<br>然后使用debug参数（通过添加<code>--debug</code>）启动Hexo本地服务器，整个命令为<code>hexo s --debug</code>。您可以在运行时看到输出，如果发现问题，则可以使用输出帮助其他人更好地定位错误。打印时：</p><pre><code>INFO Hexo在http：// localhost：4000 /上运行。按Ctrl + C停止。</code></pre><p>现在，您可以<code>http://localhost:4000</code>在浏览器中打开，并检查网站是否正常运行。</p><p>如果发现您的站点看起来像这张图片，则说明您已正确安装它。这是默认的NexT方案– Muse。<br><img src="https://theme-next.js.org/images/docs/next-default-scheme.png" alt="默认方案–缪斯"></p><h3 id="六方配置"><a href="#六方配置" class="headerlink" title="六方配置"></a>六方配置</h3><p>中的以下设置 站点配置文件 对优化您的网站非常有帮助。</p><h4 id="配置作者"><a href="#配置作者" class="headerlink" title="配置作者"></a>配置作者</h4><p>编辑 站点配置文件并将其值设置<code>author</code>为您的昵称。</p><pre><code>hexo / _config.yml＃网站作者：</code></pre><h4 id="配置说明"><a href="#配置说明" class="headerlink" title="配置说明"></a>配置说明</h4><p>编辑 站点配置文件并<code>description</code>为您的描述设置值，该描述可以是您喜欢的句子。</p><pre><code>hexo / _config.yml＃网站说明：</code></pre><p>之后，我们可以<a href="https://theme-next.js.org/docs/getting-started/deployment.html">配置部署</a>。</p><p>如果一切正常，则在下一步中，我们将更改一些设置，包括<a href="https://theme-next.js.org/docs/theme-settings/">个性化</a>设置和<a href="https://theme-next.js.org/docs/third-party-services/">第三方服务集成</a>。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分享 </tag>
            
            <tag> 导航 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
