<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Git使用总结</title>
      <link href="2021/05/24/git-shi-yong-zong-jie/"/>
      <url>2021/05/24/git-shi-yong-zong-jie/</url>
      
        <content type="html"><![CDATA[<h1 id="git使用"><a href="#git使用" class="headerlink" title="git使用"></a>git使用</h1><p>git help</p><p>git help comint </p><p>当查看的文档是多页面时， f：下一面，b:上一面，  /ab：查找文档中ab 显示高亮，  q:退出</p><p>2.远程使用</p><p>clone   克隆</p><p>pull        拉取</p><p>push    推送</p><p>merge   合并</p><p>3.常见命令</p><p>mac 显示所以隐藏文件： defaults write com.apple.finder AppleShowAllFiles Yes &amp;&amp; killall Finder</p><p>mac 关闭隐藏文件显示： defaults write com.apple.finder AppleShowAllFiles No &amp;&amp; killall Finder</p><p>1.初始化： 选择一个文件夹 git init</p><p>2.创建文件： touch  car.h</p><p>3.查看文件状态：git status</p><p>注意： </p><p>​     红色文件： 文件没有被纳入到 git管理中。或文件被修改了。</p><p>​     绿色文件： 文件加入到了暂存区。</p><p>4.将文件提交到暂存区：git add 文件名 </p><p>5.将多个文件提交到暂存区：git add .   这里的点代表当前目录的所有文件。</p><p>6.将暂存区放到本地版本控制中：  git commit -m ‘提交文件时需要的注释’</p><p>7.查看文件与版本库的不同 ： git diff</p><p>4.配帐号信息（一般来讲只需要配置一次全局的帐号）</p><p>1.配制用户名 ：</p><p>配制全局的用户名  git config –global user.name</p><p>配制当前版本库 ： git config user.name</p><p>2 配制邮箱：</p><p>配制全局的邮箱： git config –global user.email     </p><p>配制当前版本库：git config user.email</p><p>如果我们没有配置过帐号信息，那么 git 会有一个默认的帐号信息</p><p>如果没有配置局部信息，会默认的使用全局信息来提交 ，局部如果配置过，那么将会使用局部配置的信息</p><p>全局的配置文件在当前用户的根目录下 叫 .gitconfig ,非全局是在当前版本库中的.git文件夹中的 config 文件</p><p>以上的文件都是隐藏类型的文件。</p><p>3.查看配制信息 git config -l</p><p>4.编辑配置信息 git config -e</p><p>5.查看日志 git log</p><p>增加版 log：配置带颜色的 log 别名</p><p> git config –global alias.lg “log –color –graph –pretty=format:’%Cred%h%Creset -%C(yellow)%d%Creset %s%Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset’ –abbrev-commit”</p><p>当这样配置完成后，可以直接使用 git lg 来查看日志</p><p>查看所有日志  git reflog</p><p>6.起别名</p><p>配制局部命令别名： git config  alias.st “status”   alias 表示起别名，</p><p>而在 alias点后面的名称就是别名， 而双引号内的字符，代表原来指令的全称。</p><p>它可以包含 参数 例： git config alias.ctm “commit -m” 这样我们提交时就直接用 git ctm 这是注释</p><p>这样使用时 注释也可以不用加引号。</p><p>以是是局部的配置，如果希望使用全局的方式就需要在  config 与 alias 之间加一个 –global  </p><p>7.版本回退 /版本穿梭</p><p>版本库回退</p><p>版本回退：git reset –hard Head^    这里的^ 表示回退到当前版本的上一个版本。 如果是两个^ 就是回退当前版本的前两个版本。</p><p>指定版本：git reset –hard 8989032  这里的8989032 是指提交时系统的版本号，可以使用 log 查看。</p><p>文件未 Commit</p><p>回退当前版本源始状态： git reset –hard Head      或者使用   git checkout 指定文件</p><p>8.分支 （多人开发）</p><p>1.服务器地址</p><p>一般第一个分支或者主分支 叫 master.</p><p>服务器地址： Git 服务器，可以是  文件夹，U盘， 云盘，只要是一个文件存储都可以当服务器</p><p>1.服务器初始 化： git init –bare</p><p>\2. 克隆代码（下载）： git clone 地址</p><p>2.设置忽略文件</p><p>1.先去 github, 搜索.gitignore, 然后找到相应的忽略文件</p><p>2 拷贝里面的所有内容，回到终端</p><p>\3. echo -e”粘帖内容” &gt; .gitignore  ，如果使用终端无法创建，可以使用 touch .gitignore 这样就创建了一个.gitignore 文件，然后将这个文件打开，将拷贝的内容粘贴到这个文件中。</p><p>4.保证 .gitignore 与 .git 在同一目录下（.git 这个目录才是 git 管理的目录）</p><p>5.将.gitignore 推送给远程服务器  add/ commit /push ( 一定要在项目创建之前)</p><p>6.推送本地分支代码给服务器： git push</p><p>3.创建分支</p><p>\1. git checkout -b 新分支名称    这里的-b 表示 创建并切换，相当于 git branch 新分支名称 和 git checkout 新分支名称 ，执行了这两个语句。第一句表示创建，第二句表示切换</p><p>2 查看当前分支 git branch  这个命令会列出很有的分支。</p><p>3.合并分支：  git merge 指定分支名称，  该命令表示指定分支合并到当前分支。</p><p>4.删除分支：  git branch -d 指定分支名称</p><p>9.代码冲突</p><p>当需要 push 时先进行 pull ,如果出现冲突，我们可以采用处理的方法。</p><p>一定要先 pull 再  push. 当有冲突，解决冲突(建议保留所有代码)，再 commit ,然后再 push.</p><p>10.创建远程的仓储   Github 或 码云</p><p>1.注册账号，然后创建项目，填写项目名/忽略文件/许可协议/RemdeMe 文件</p><p>2.直接拷贝 Https:// 地址， 本地进行 clonge</p><p>3.在此项目文件夹内，创建项目，并提交， push时需要账号和密码。（这里的帐号和密码是指你网站的帐号和密码）</p><p>4.如果将来多人参与开发，那么可以点击右上角的管理，进行团队开发人员的权限控制。</p><p>11.设置 SSH 公钥：</p><p>ssh-keygen -t rsa -C “邮箱”  生成 SSHKey.</p><p>cat ~/.ssh/id_rsa.pub  查看生成的 Key 值 </p><p>1.从远程克隆一份到本地可以通过git clone</p><p>git clone <a href="mailto:&#103;&#x69;&#116;&#64;&#103;&#x69;&#116;&#x68;&#x75;&#98;&#x2e;&#x63;&#x6f;&#109;">&#103;&#x69;&#116;&#64;&#103;&#x69;&#116;&#x68;&#x75;&#98;&#x2e;&#x63;&#x6f;&#109;</a>:nanfei9330/xx.git</p><p>2.本地库关联远程库，在本地仓库目录运行命令：</p><p>git remote add origin <a href="mailto:&#103;&#105;&#x74;&#64;&#x67;&#105;&#116;&#104;&#117;&#x62;&#x2e;&#99;&#111;&#x6d;">&#103;&#105;&#x74;&#64;&#x67;&#105;&#116;&#104;&#117;&#x62;&#x2e;&#99;&#111;&#x6d;</a>:nanfei9330/learngit.git</p><p>3.推送master分支的所有内容，第一次使用加上了-u参数，是推送内容并关联分支。以后就不用加-u了。</p><p>git push -u origin master</p><p>​    <img src="https://note.youdao.com/yws/public/resource/655a8109e844b7e4f9e7de608f330798/xmlnote/CB15D81BC03244E6B5935246F8BAF134/9756" alt="0"></p><p><strong>Git生成多个ssh key：</strong><a href="https://blog.csdn.net/u012365926/article/details/52293036"><strong>https://blog.csdn.net/u012365926/article/details/52293036</strong></a></p><p><a href="https://www.jianshu.com/p/fbbf6efb50ba">https://www.jianshu.com/p/fbbf6efb50ba</a></p><h1 id="git-提交本地代码到远程新的仓库"><a href="#git-提交本地代码到远程新的仓库" class="headerlink" title="git 提交本地代码到远程新的仓库"></a>git 提交本地代码到远程新的仓库</h1><p><a href="https://www.zhihu.com/people/schedule_cau"><img src="https://pic1.zhimg.com/v2-ba128e40d122404b25093a7ba5924f5a_xs.jpg?source=172ae18b" alt="Scheduler"></a></p><p>清空git缓存，否则.gitignore的改变无效</p><p>git rm -r –cached .</p><p>git add .</p><p>git commit -m ‘update .gitignore’</p><hr><p>1、（先进入项目文件夹）通过命令 git init 把这个目录变成git可以管理的仓库</p><p>git init</p><p>2、把文件添加到版本库中，使用命令 git add .添加到暂存区里面去，不要忘记后面的小数点“.”，意为添加文件夹下的所有文件</p><p>git add .</p><p>3、用命令 git commit告诉Git，把文件提交到仓库。引号内为提交说明</p><p>git commit -m ‘first commit’</p><p>4、关联到远程库</p><p>git remote add origin 你的远程库地址</p><p>如：</p><p>git remote add origin <a href="mailto:git@gitee.com">git@gitee.com</a>:Eshao731/server_manager.git</p><p>5、获取远程库与本地同步合并（如果远程库不为空必须做这一步，否则后面的提交会失败）</p><p>git pull –rebase origin master</p><p>6、把本地库的内容推送到远程，使用 git push命令，实际上是把当前分支master推送到远程。执行此命令后会要求输入用户名、密码，验证通过后即开始上传。</p><p>git push -u origin master</p><p>*、状态查询命令</p><p>git status</p><ul><li>当前分支的文件修改后直接暂存修改<code>git stash</code></li><li>切换分支：<code>git checkout &lt;the-branch-that-you-want-to-commit&gt;</code></li><li>弹出修改：<code>git stash pop</code></li><li>暂存所需文件：<code>git add .</code></li><li>附加提交信息：<code>git commit -m &quot;Push from the other branch&quot;</code></li><li>提交：<code>git push -f origin HEAD:&lt;the-branch-that-you-want-to-commit&gt;</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分享 </tag>
            
            <tag> 导航 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学会提问</title>
      <link href="2021/03/15/xue-hui-ti-wen/"/>
      <url>2021/03/15/xue-hui-ti-wen/</url>
      
        <content type="html"><![CDATA[<h1 id="学会提问"><a href="#学会提问" class="headerlink" title="学会提问"></a>学会提问</h1><p>上学时期，我们扮演回答者角色的时候居多。但上班后，我们成了<strong>自学者</strong>，不得不学会主动求教别人，可提问得不好，得到的将是一个大白眼或是直截了当的拒绝，更严重的是——对方可能在心中悄悄把你拉入黑名单了。</p><p>所以，我们需要优质提问。*<em>什么是优质提问呢？</em></p><p><strong>能让被问者不假思索就乐意回答，并能为其带来新发现的提问，就是优质提问。</strong></p><p>优质提问的好处当然多多啦！于自身而言，每天向自己“优质提问”,引发行动，就能变得越来越优秀啦！于他人而言，引发别人的新思考和新发现，既帮助了别人，又为自己赢得了良好的人际关系。</p><h4 id="那么如何学会优质提问呢？"><a href="#那么如何学会优质提问呢？" class="headerlink" title="那么如何学会优质提问呢？"></a>那么如何学会优质提问呢？</h4><blockquote><p><strong>1.由“轻松提问”“沉重提问”转变为“优质提问”。</strong></p></blockquote><h5 id="书中把提问以“四象限法”分为四类：优质提问、轻松提问、劣质提问和沉重提问。"><a href="#书中把提问以“四象限法”分为四类：优质提问、轻松提问、劣质提问和沉重提问。" class="headerlink" title="书中把提问以“四象限法”分为四类：优质提问、轻松提问、劣质提问和沉重提问。"></a>书中把提问以“四象限法”分为四类：优质提问、轻松提问、劣质提问和沉重提问。</h5><p>优质提问特点之前已经提过，故不累述。</p><p>轻松提问特点：乐意回答，但无发现。</p><p>劣质提问特点：不愿回答且无发现。</p><p>沉重回答：不愿回答，但有发现。</p><p>“轻松提问”有利于建立良好的关系，是“优质提问”的基础，但要想达到“优质提问”，核心就是“有发现”。</p><p>①.通过“轻松提问”使对方放下心防，与你轻松交谈，建立好的人际关系。</p><p>②.进入“预练期”，询问对方方便透露的自身信息：学校学习的内容、职场积累的经验、曾经的经历等等。当然，“预练期”前最好提前了解下对方，可通过他同事、同学或者个人社交APP。</p><p>③.可以进入“优质提问阶段”：这时可通过询问对方的成功经历，向对方发问：“您觉得你这些年之所以能在商界成为传奇性人物的原因是什么呢？”</p><h4 id="对于“沉重提问”转变成“优质提问”，可以做的是："><a href="#对于“沉重提问”转变成“优质提问”，可以做的是：" class="headerlink" title="对于“沉重提问”转变成“优质提问”，可以做的是："></a>对于“沉重提问”转变成“优质提问”，可以做的是：</h4><p>①.先把让对方不愿回答，引发思考的问题放到一边去，以“轻松提问”开始，开放式提问。</p><p>②.按“轻松提问”的步骤来。</p><blockquote><p><strong>2.交换言外的信息</strong></p></blockquote><p><strong>“言语”本身自然要听，但在此基础上，还有必要注意其“说话方式”和“言语中蕴含的感情”。</strong></p><p>通俗点说，就是要听懂言外之意。</p><p>拿男女朋友聊天为例吧！</p><p>“亲爱的，咱们去吃饭吧！”</p><p>“等下，我打完这一局就走。”</p><p>“好的。”女友甜甜地应道，表明女友没有生气，你可以安心打游戏了。</p><p>但是，当女友的回复是：“好啊，我——等——你。”说话时还伴随着恶狠狠的咬牙切齿的声音，你是不是就该有所觉察呢？不然，估计你的键盘有危险了。</p><blockquote><p><strong>3.提问应顺势而行，现想现问。</strong></p></blockquote><p>当面试前，总会有人不顾现场气氛就开始背之前准备好的自我介绍，这样只会给面试官留下一个不好的印象：“这孩子没有眼力见吗？我还没问，他先说个什么劲啊？”</p><p>事先准备不是完全没有用，这样会使自己更从容地面对他人。但是当别人作出了有深度的回答时，你应该顺势而为，接着提问。</p><p>在倾听对方的回答过程中，也不要忘了记下关键词，以便引出下一个提问。</p><blockquote><h5 id="4-当场思考各种提问的方法关键是学会运用“5W1H”和“3V”"><a href="#4-当场思考各种提问的方法关键是学会运用“5W1H”和“3V”" class="headerlink" title="4.当场思考各种提问的方法关键是学会运用“5W1H”和“3V”"></a><strong>4.当场思考各种提问的方法关键是学会运用“5W1H”和“3V”</strong></h5></blockquote><p><strong>5W1H”对应的是：原因、时间、地点、人物、对象和方法。</strong></p><p><strong>“3V”对应的是：理想、价值、常用词。</strong></p><p>设定一情境，父母对孩子的成绩一落千丈很不满，那么如何规劝孩子好好学习呢？</p><p>①理想（渴望得到的东西）</p><p>“想让孩子的成绩提升到之前的第十名”“想要孩子成绩一直稳定”“想要孩子明白学习的重要性”</p><p>②价值（价值观）</p><p>“聪明”“优秀”“自强独立”“学习认真”</p><p>③词汇</p><p>“目标”“自己满意”“优秀青年”“重要”</p><p>现在把”5W1H”和“3V”合一起提问就是：</p><p>“儿子，为了成绩能够提升到之前的第十名，你认为现在做“什么”是最重要的？</p><p>“儿子，为了成为一个优秀的青年，你认为“谁”是值得你学习的榜样？”</p><p>“儿子，你觉得你什么时候学习能够达到最认真？”</p><p>5.只提问不提建议。</p><p>当对方通过提问，自己获得新发现后，那么他会去行动，这样才能取得更大的进步同时，自己想出来的法子更有成就感，更能记住。</p><p>6.提问应该排除杂音，专注于想问的事。</p><p>①让对方理解你的意思，不要让对方产生误解。</p><p>②不要“别有用心”地提问,常常听到有人拿住话筒，开始显示自己的才华：“曾经XX说过XX，和你现在说的差不多，我认为呢……”接着又开始引经据典，讲了好几分钟后，最后不知道他是提问的额是啥。</p><p>7.对“你”提问</p><p>当你想把问题抛给别人时，不如先问问自己：“我问的这个问题，我自己的想法是怎样的？我会怎么解决这个问题？”这样更有助于问题的解决。</p><blockquote><p><strong>8.以“我”为主语的反馈</strong></p></blockquote><h5 id="当别人回答完你的提问后，一定要给予反馈，显示你很重视他的回答。"><a href="#当别人回答完你的提问后，一定要给予反馈，显示你很重视他的回答。" class="headerlink" title="当别人回答完你的提问后，一定要给予反馈，显示你很重视他的回答。"></a>当别人回答完你的提问后，一定要给予反馈，显示你很重视他的回答。</h5><p><strong>与此同时，要注意区别“客观事实”和“主观事实”。</strong></p><p>这里的“客观事实”是指一个人的说话习惯或特点。</p><p>“主观事实”是指“我听了后的感想。”</p><p>比如，你可以这么反馈：“刚刚我看到你回答我的问题：“你觉得自己是个怎样的人？”时摸了3次鼻子，我认为你有点紧张，我建议你喝点水，不知道有没有误解你呢？“</p><p><strong>其次，不要评判对方回复的好或劣。</strong></p><p>如果你立即给出的反馈是：“你的回答好差劲。”那么，会让对方心里很不舒服，谁也不想自己被否定，同时，对方肯定会对下个提问采取守势，对你设下心防。这样，很不利于下一个提问的进行。</p><h5 id="最后，就是提问前注意选择好时间和场所，为双方愉悦的交谈做好准备。"><a href="#最后，就是提问前注意选择好时间和场所，为双方愉悦的交谈做好准备。" class="headerlink" title="最后，就是提问前注意选择好时间和场所，为双方愉悦的交谈做好准备。"></a>最后，就是提问前注意选择好时间和场所，为双方愉悦的交谈做好准备。</h5>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分享 </tag>
            
            <tag> 导航 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Excel导入导出的应用场景</title>
      <link href="2021/03/08/excel-dao-ru-dao-chu-de-ying-yong-chang-jing/"/>
      <url>2021/03/08/excel-dao-ru-dao-chu-de-ying-yong-chang-jing/</url>
      
        <content type="html"><![CDATA[<h1 id="Excel导入导出的应用场景"><a href="#Excel导入导出的应用场景" class="headerlink" title="Excel导入导出的应用场景"></a>Excel导入导出的应用场景</h1><h2 id="1、数据导入"><a href="#1、数据导入" class="headerlink" title="1、数据导入"></a>1、数据导入</h2><p>减轻录入工作量</p><h2 id="2、数据导出"><a href="#2、数据导出" class="headerlink" title="2、数据导出"></a>2、数据导出</h2><p>统计信息归档</p><h2 id="3、数据传输"><a href="#3、数据传输" class="headerlink" title="3、数据传输"></a>3、数据传输</h2><p>异构系统之间数据传输</p><h1 id="二、EasyExcel简介"><a href="#二、EasyExcel简介" class="headerlink" title="二、EasyExcel简介"></a>二、EasyExcel简介</h1><h2 id="1、官方网站"><a href="#1、官方网站" class="headerlink" title="1、官方网站"></a>1、官方网站</h2><p><a href="https://github.com/alibaba/easyexcel">https://github.com/alibaba/easyexcel</a></p><p>快速开始：<a href="https://www.yuque.com/easyexcel/doc/easyexcel">https://www.yuque.com/easyexcel/doc/easyexcel</a></p><h2 id="2、EasyExcel特点"><a href="#2、EasyExcel特点" class="headerlink" title="2、EasyExcel特点"></a>2、EasyExcel特点</h2><ul><li>Java领域解析、生成Excel比较有名的框架有Apache poi、jxl等。但他们都存在一个严重的问题就是非常的耗内存。如果你的系统并发量不大的话可能还行，但是一旦并发上来后一定会OOM或者JVM频繁的full gc。</li><li>EasyExcel是阿里巴巴开源的一个excel处理框架，<strong>以使用简单、节省内存著称</strong>。EasyExcel能大大减少占用内存的主要原因是在解析Excel时没有将文件数据一次性全部加载到内存中，而是从磁盘上一行行读取数据，逐个解析。</li><li>EasyExcel采用一行一行的解析模式，并将一行的解析结果以观察者的模式通知处理（AnalysisEventListener）。</li></ul><h1 id="二、创建项目"><a href="#二、创建项目" class="headerlink" title="二、创建项目"></a>二、创建项目</h1><h2 id="1、创建一个普通的maven项目"><a href="#1、创建一个普通的maven项目" class="headerlink" title="1、创建一个普通的maven项目"></a>1、创建一个普通的maven项目</h2><p>项目名：alibaba_easyexcel</p><h2 id="2、pom中引入xml相关依赖"><a href="#2、pom中引入xml相关依赖" class="headerlink" title="2、pom中引入xml相关依赖"></a>2、pom中引入xml相关依赖</h2><pre class=" language-java"><code class="language-java"><span class="token operator">&lt;</span>dependencies<span class="token operator">></span>    <span class="token operator">&lt;</span>dependency<span class="token operator">></span>        <span class="token operator">&lt;</span>groupId<span class="token operator">></span>com<span class="token punctuation">.</span>alibaba<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>        <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>easyexcel<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>        <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">2.1</span><span class="token punctuation">.</span><span class="token number">7</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span>dependency<span class="token operator">></span>        <span class="token operator">&lt;</span>groupId<span class="token operator">></span>org<span class="token punctuation">.</span>slf4j<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>        <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>slf4j<span class="token operator">-</span>simple<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>        <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">1.7</span><span class="token punctuation">.</span><span class="token number">5</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span>dependency<span class="token operator">></span>        <span class="token operator">&lt;</span>groupId<span class="token operator">></span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xmlbeans<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>        <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>xmlbeans<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>        <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">3.1</span><span class="token punctuation">.</span><span class="token number">0</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span>dependency<span class="token operator">></span>        <span class="token operator">&lt;</span>groupId<span class="token operator">></span>org<span class="token punctuation">.</span>projectlombok<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>        <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>lombok<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>        <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">1.18</span><span class="token punctuation">.</span><span class="token number">10</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span>dependency<span class="token operator">></span>        <span class="token operator">&lt;</span>groupId<span class="token operator">></span>junit<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>        <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>junit<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>        <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">4.12</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>dependencies<span class="token operator">></span></code></pre><h1 id="二、最简单的写"><a href="#二、最简单的写" class="headerlink" title="二、最简单的写"></a>二、最简单的写</h1><h2 id="1、创建实体类"><a href="#1、创建实体类" class="headerlink" title="1、创建实体类"></a>1、创建实体类</h2><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>easyexcel<span class="token punctuation">.</span>entity<span class="token punctuation">;</span><span class="token annotation punctuation">@Data</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExcelStudentData</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@ExcelProperty</span><span class="token punctuation">(</span><span class="token string">"姓名"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ExcelProperty</span><span class="token punctuation">(</span><span class="token string">"生日"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Date birthday<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ExcelProperty</span><span class="token punctuation">(</span><span class="token string">"薪资"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Double salary<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 忽略这个字段     */</span>    <span class="token annotation punctuation">@ExcelIgnore</span>    <span class="token keyword">private</span> String password<span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h2 id="2、测试用例"><a href="#2、测试用例" class="headerlink" title="2、测试用例"></a>2、测试用例</h2><ul><li>07版本的Excel和03版本的写入方式有所不同</li><li>03版本的Excel写入最多一次可写65536行</li></ul><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>easyexcel<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExcelWriteTest</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 最简单的写     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">simpleWrite07</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        String fileName <span class="token operator">=</span> <span class="token string">"d:/excel/01-simpleWrite-07.xlsx"</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 这里 需要指定写用哪个class去写，然后写到第一个sheet，名字为模板 然后文件流会自动关闭</span>        EasyExcel<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>fileName<span class="token punctuation">,</span> ExcelStudentData<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sheet</span><span class="token punctuation">(</span><span class="token string">"模板"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">doWrite</span><span class="token punctuation">(</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">simpleWrite03</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        String fileName <span class="token operator">=</span> <span class="token string">"d:/excel/01-simpleWrite-03.xls"</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 如果这里想使用03 则 传入excelType参数即可</span>        EasyExcel<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>fileName<span class="token punctuation">,</span> ExcelStudentData<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">excelType</span><span class="token punctuation">(</span>ExcelTypeEnum<span class="token punctuation">.</span>XLS<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sheet</span><span class="token punctuation">(</span><span class="token string">"模板"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">doWrite</span><span class="token punctuation">(</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> List<span class="token operator">&lt;</span>ExcelStudentData<span class="token operator">></span> <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>ExcelStudentData<span class="token operator">></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//算上标题，做多可写65536行</span>        <span class="token comment" spellcheck="true">//超出：java.lang.IllegalArgumentException: Invalid row number (65536) outside allowable range (0..65535)</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">65535</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            ExcelStudentData data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ExcelStudentData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            data<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"Helen"</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>            data<span class="token punctuation">.</span><span class="token function">setBirthday</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            data<span class="token punctuation">.</span><span class="token function">setSalary</span><span class="token punctuation">(</span><span class="token number">0.56</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            data<span class="token punctuation">.</span><span class="token function">setPassword</span><span class="token punctuation">(</span><span class="token string">"123"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//即使设置也不会被导出</span>            list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> list<span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h1 id="三、指定写入列"><a href="#三、指定写入列" class="headerlink" title="三、指定写入列"></a>三、指定写入列</h1><p>为列配置 index 属性</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>easyexcel<span class="token punctuation">.</span>entity<span class="token punctuation">;</span><span class="token annotation punctuation">@Data</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExcelStudentData</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@ExcelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"姓名"</span><span class="token punctuation">,</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ExcelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"生日"</span><span class="token punctuation">,</span> index <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Date birthday<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 这里设置3 会导致第二列空的     */</span>    <span class="token annotation punctuation">@ExcelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"薪资"</span><span class="token punctuation">,</span> index <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Double salary<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 忽略这个字段     */</span>    <span class="token annotation punctuation">@ExcelIgnore</span>    <span class="token keyword">private</span> String password<span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h1 id="四、自定义格式转换"><a href="#四、自定义格式转换" class="headerlink" title="四、自定义格式转换"></a>四、自定义格式转换</h1><p>配置@DateTimeFormat 和 @NumberFormat</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>easyexcel<span class="token punctuation">.</span>entity<span class="token punctuation">;</span><span class="token annotation punctuation">@Data</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExcelStudentData</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@ExcelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"姓名"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>    <span class="token annotation punctuation">@DateTimeFormat</span><span class="token punctuation">(</span><span class="token string">"yyyy年MM月dd日HH时mm分ss秒"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ExcelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"生日"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Date birthday<span class="token punctuation">;</span>    <span class="token annotation punctuation">@NumberFormat</span><span class="token punctuation">(</span><span class="token string">"#.##%"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//百分比表示，保留两位小数</span>    <span class="token annotation punctuation">@ExcelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"薪资"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Double salary<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 忽略这个字段     */</span>    <span class="token annotation punctuation">@ExcelIgnore</span>    <span class="token keyword">private</span> String password<span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h1 id="最简单的读"><a href="#最简单的读" class="headerlink" title="最简单的读"></a>最简单的读</h1><h2 id="1、参考文档"><a href="#1、参考文档" class="headerlink" title="1、参考文档"></a>1、参考文档</h2><p><a href="https://www.yuque.com/easyexcel/doc/read">https://www.yuque.com/easyexcel/doc/read</a></p><h2 id="2、创建监听器"><a href="#2、创建监听器" class="headerlink" title="2、创建监听器"></a>2、创建监听器</h2><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>easyexcel<span class="token punctuation">.</span>listener<span class="token punctuation">;</span><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExcelStudentDataListener</span> <span class="token keyword">extends</span> <span class="token class-name">AnalysisEventListener</span><span class="token operator">&lt;</span>ExcelStudentData<span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 每隔5条存储数据库，实际使用中可以3000条，然后清理list ，方便内存回收     */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> BATCH_COUNT <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>    List<span class="token operator">&lt;</span>ExcelStudentData<span class="token operator">></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 这个每一条数据解析都会来调用     *     * @param data     *            one row value. Is is same as &amp;#123;@link AnalysisContext#readRowHolder()&amp;#125;     * @param context     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">invoke</span><span class="token punctuation">(</span>ExcelStudentData data<span class="token punctuation">,</span> AnalysisContext context<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"解析到一条数据:&amp;#123;&amp;#125;"</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 达到BATCH_COUNT了，需要去存储一次数据库，防止数据几万条数据在内存，容易OOM</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">>=</span> BATCH_COUNT<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"存数据库"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 存储完成清理 list</span>            list<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 所有数据解析完成了 都会来调用     *     * @param context     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doAfterAllAnalysed</span><span class="token punctuation">(</span>AnalysisContext context<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"所有数据解析完成！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h2 id="3、测试用例"><a href="#3、测试用例" class="headerlink" title="3、测试用例"></a>3、测试用例</h2><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>easyexcel<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExcelReadTest</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 最简单的读     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">simpleRead07</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        String fileName <span class="token operator">=</span> <span class="token string">"d:/excel/01-simpleWrite-07.xlsx"</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 这里默认读取第一个sheet</span>        EasyExcel<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>fileName<span class="token punctuation">,</span> ExcelStudentData<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ExcelStudentDataListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sheet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">doRead</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">simpleRead03</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        String fileName <span class="token operator">=</span> <span class="token string">"d:/excel/01-simpleWrite-03.xls"</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 这里默认读取第一个sheet</span>        EasyExcel<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>fileName<span class="token punctuation">,</span> ExcelStudentData<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ExcelStudentDataListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">excelType</span><span class="token punctuation">(</span>ExcelTypeEnum<span class="token punctuation">.</span>XLS<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sheet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">doRead</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分享 </tag>
            
            <tag> 导航 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swagger2介绍</title>
      <link href="2021/03/08/swagger2-jie-shao/"/>
      <url>2021/03/08/swagger2-jie-shao/</url>
      
        <content type="html"><![CDATA[<h1 id="Swagger2介绍"><a href="#Swagger2介绍" class="headerlink" title="Swagger2介绍"></a>Swagger2介绍</h1><p><a href="https://swagger.io/">https://swagger.io/</a></p><p>前后端分离开发模式中，api文档是最好的沟通方式。</p><p>Swagger 是一个规范和完整的框架，用于生成、描述、调用和可视化 RESTful 风格的 Web 服务。</p><p>及时性 (接口变更后，能够及时准确地通知相关前后端开发人员)规范性 (并且保证接口的规范性，如接口的地址，请求方式，参数及响应格式和错误信息)一致性 (接口信息一致，不会出现因开发人员拿到的文档版本不一致，而出现分歧)可测性 (直接在接口文档上进行测试，以方便理解业务)</p><ul><li>前端工程师编写接口文档（使用swagger2编辑器或其他接口生成工具）</li><li>交给后端工程师</li><li>根据swagger文档编写后端接口</li><li>最终根据生成的swagger文件进行接口联调</li></ul><h1 id="二、配置Swagger2"><a href="#二、配置Swagger2" class="headerlink" title="二、配置Swagger2"></a>二、配置Swagger2</h1><h2 id="1、依赖"><a href="#1、依赖" class="headerlink" title="1、依赖"></a>1、依赖</h2><p>common中添加依赖</p><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>swagger<span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span>groupId<span class="token operator">></span>io<span class="token punctuation">.</span>springfox<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>    <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>springfox<span class="token operator">-</span>swagger2<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>    <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">2.7</span><span class="token punctuation">.</span><span class="token number">0</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span><span class="token operator">&lt;</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span>groupId<span class="token operator">></span>io<span class="token punctuation">.</span>springfox<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>    <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>springfox<span class="token operator">-</span>swagger<span class="token operator">-</span>ui<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>    <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">2.7</span><span class="token punctuation">.</span><span class="token number">0</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span></code></pre><h2 id="2、创建Swagger2配置文件"><a href="#2、创建Swagger2配置文件" class="headerlink" title="2、创建Swagger2配置文件"></a>2、创建Swagger2配置文件</h2><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">package</span> com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>guli<span class="token punctuation">.</span>service<span class="token punctuation">.</span>base<span class="token punctuation">.</span>config<span class="token punctuation">;</span>@Configuration@EnableSwagger2<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Swagger2Config</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    @Bean    <span class="token keyword">public</span> Docket <span class="token function">webApiConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Docket</span><span class="token punctuation">(</span>DocumentationType<span class="token punctuation">.</span>SWAGGER_2<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">groupName</span><span class="token punctuation">(</span><span class="token string">"webApi"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token function">webApiInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//只显示api路径下的页面</span>                <span class="token punctuation">.</span><span class="token function">paths</span><span class="token punctuation">(</span>Predicates<span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span>PathSelectors<span class="token punctuation">.</span><span class="token function">regex</span><span class="token punctuation">(</span><span class="token string">"/api/.*"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    @Bean    <span class="token keyword">public</span> Docket <span class="token function">adminApiConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Docket</span><span class="token punctuation">(</span>DocumentationType<span class="token punctuation">.</span>SWAGGER_2<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">groupName</span><span class="token punctuation">(</span><span class="token string">"adminApi"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token function">adminApiInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//只显示admin路径下的页面</span>                <span class="token punctuation">.</span><span class="token function">paths</span><span class="token punctuation">(</span>Predicates<span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span>PathSelectors<span class="token punctuation">.</span><span class="token function">regex</span><span class="token punctuation">(</span><span class="token string">"/admin/.*"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> ApiInfo <span class="token function">webApiInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ApiInfoBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">"网站-API文档"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">"本文档描述了网站微服务接口定义"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token string">"1.0"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">contact</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Contact</span><span class="token punctuation">(</span><span class="token string">"Helen"</span><span class="token punctuation">,</span> <span class="token string">"http://atguigu.com"</span><span class="token punctuation">,</span> <span class="token string">"55317332@qq.com"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> ApiInfo <span class="token function">adminApiInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ApiInfoBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">"后台管理系统-API文档"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">"本文档描述了后台管理系统微服务接口定义"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token string">"1.0"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">contact</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Contact</span><span class="token punctuation">(</span><span class="token string">"Helen"</span><span class="token punctuation">,</span> <span class="token string">"http://atguigu.com"</span><span class="token punctuation">,</span> <span class="token string">"55317332@qq.com"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h2 id="3、重启服务器查看接口"><a href="#3、重启服务器查看接口" class="headerlink" title="3、重启服务器查看接口"></a>3、重启服务器查看接口</h2><p><a href="http://localhost:8101/swagger-ui.html">http://localhost:端口号/swagger-ui.html</a></p><h1 id="三、常见注解"><a href="#三、常见注解" class="headerlink" title="三、常见注解"></a>三、常见注解</h1><h2 id="1、API模型"><a href="#1、API模型" class="headerlink" title="1、API模型"></a>1、API模型</h2><p>entity的实体类中可以添加一些自定义设置，例如：</p><p>定义样例数据</p><pre class=" language-javascript"><code class="language-javascript">@<span class="token function">ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"入驻时间"</span><span class="token punctuation">,</span> example <span class="token operator">=</span> <span class="token string">"2010-01-01"</span><span class="token punctuation">)</span>@<span class="token function">JsonFormat</span><span class="token punctuation">(</span>timezone <span class="token operator">=</span> <span class="token string">"GMT+8"</span><span class="token punctuation">,</span> pattern <span class="token operator">=</span> <span class="token string">"yyyy-MM-dd"</span><span class="token punctuation">)</span><span class="token keyword">private</span> Date joinDate<span class="token punctuation">;</span>@<span class="token function">ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"创建时间"</span><span class="token punctuation">,</span> example <span class="token operator">=</span> <span class="token string">"2019-01-01 8:00:00"</span><span class="token punctuation">)</span>@<span class="token function">TableField</span><span class="token punctuation">(</span>fill <span class="token operator">=</span> FieldFill<span class="token punctuation">.</span>INSERT<span class="token punctuation">)</span><span class="token keyword">private</span> Date gmtCreate<span class="token punctuation">;</span>@<span class="token function">ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"更新时间"</span><span class="token punctuation">,</span> example <span class="token operator">=</span> <span class="token string">"2019-01-01 8:00:00"</span><span class="token punctuation">)</span>@<span class="token function">TableField</span><span class="token punctuation">(</span>fill <span class="token operator">=</span> FieldFill<span class="token punctuation">.</span>INSERT_UPDATE<span class="token punctuation">)</span><span class="token keyword">private</span> Date gmtModified<span class="token punctuation">;</span></code></pre><h2 id="2、定义接口说明和参数说明"><a href="#2、定义接口说明和参数说明" class="headerlink" title="2、定义接口说明和参数说明"></a>2、定义接口说明和参数说明</h2><p>定义在类上：@Api</p><p>定义在方法上：@ApiOperation</p><p>定义在参数上：@ApiParam</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">package</span> com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>guli<span class="token punctuation">.</span>service<span class="token punctuation">.</span>edu<span class="token punctuation">.</span>controller<span class="token punctuation">.</span>admin<span class="token punctuation">;</span>@<span class="token function">Api</span><span class="token punctuation">(</span>description <span class="token operator">=</span> <span class="token string">"讲师管理"</span><span class="token punctuation">)</span>@RestController@<span class="token function">RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/admin/edu/teacher"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TeacherController</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    @Autowired    <span class="token keyword">private</span> TeacherService teacherService<span class="token punctuation">;</span>    @<span class="token function">ApiOperation</span><span class="token punctuation">(</span><span class="token string">"所有讲师列表"</span><span class="token punctuation">)</span>    @<span class="token function">GetMapping</span><span class="token punctuation">(</span><span class="token string">"list"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>Teacher<span class="token operator">></span> <span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> teacherService<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    @<span class="token function">ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"根据ID删除讲师"</span><span class="token punctuation">,</span> notes <span class="token operator">=</span> <span class="token string">"根据ID删除讲师"</span><span class="token punctuation">)</span>    @<span class="token function">DeleteMapping</span><span class="token punctuation">(</span><span class="token string">"remove/&amp;#123;id&amp;#125;"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> boolean <span class="token function">removeById</span><span class="token punctuation">(</span>@<span class="token function">ApiParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"讲师ID"</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span> @PathVariable String id<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> teacherService<span class="token punctuation">.</span><span class="token function">removeById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分享 </tag>
            
            <tag> 导航 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Maven聚合和继承的关系</title>
      <link href="2020/12/23/ju-he-he-ji-cheng-de-guan-xi/"/>
      <url>2020/12/23/ju-he-he-ji-cheng-de-guan-xi/</url>
      
        <content type="html"><![CDATA[<h1 id="Maven聚合和继承的关系"><a href="#Maven聚合和继承的关系" class="headerlink" title="Maven聚合和继承的关系"></a>Maven聚合和继承的关系</h1><p>​    虽然聚合模块和父模块经常<strong>合二为一</strong>，但是聚合和继承是两个不同的概念，其实是没有什么关系的。</p><p><strong>聚合模块</strong>知道它聚合了哪些模块，但是被聚合的模块不知道聚合模块的存在；</p><p><strong>父模块</strong>不知道子模块的存在，但是子模块都必须知道自己的父模块是谁。</p><p>可以用下图来表示这两个不同的概念：</p><a id="more"></a><p>补充：可继承的POM元素如下（红色为常用的元素）</p><ul><li>groupId：项目组ID，项目坐标的核心元素。</li><li>version：项目版本，项目坐标的核心因素。</li><li>description：项目的描述信息。</li><li>organization：项目的组织信息。</li><li>inceptionYear：项目的创始年份。</li><li>url：项目的URL地址。</li><li>developers：项目的开发者信息。</li><li>contributors：项目的贡献者信息。</li><li>distributionManagement：项目的部署配置。</li><li>issueManagement：项目的缺陷跟踪系统信息。</li><li>ciManagement：项目的持续集成系统信息。</li><li>scm：项目的版本控制系统。</li><li>malilingLists：项目的邮件列表信息。</li><li>properties：自定义的Maven属性。</li><li>dependencies：项目的依赖配置。</li><li>dependencyManagement：项目的依赖管理配置。</li><li>repositories：项目的仓库配置。</li><li>build：包括项目的源码目录配置、输出目录配置、插件配置、插件管理配置等。</li><li>reporting：包括项目的报告输出目录配置、报告插件配置等。</li></ul><p><strong>反应堆</strong></p><p>对于单模块Maven项目而言，反应堆就是整个项目本身。而对于多模块的Maven项目，反应堆是整个项目所有模块组成的一个构建结构，包含模块之间继承与依赖的关系。模块间的依赖关系会将反应堆构成一个有向非循环图。</p><p><strong>裁剪反应堆</strong></p><p>  一般来说，我们要么构建整个项目，要么构建单个模块，但是有些时候，我们会想要仅仅构建这个完整的反应堆中的某些模块，所以我们需要裁剪反应堆。</p><p>  Maven提供的如下几条裁剪反应堆命令：</p><ul><li>-pl –projects：构建指定的模块，多个模块用,分隔，不会构建所列模块的依赖</li><li>-am alse mak：``构建模块同时构建所列模块依赖的其他模块</li><li>-amd alse make dependency：构建模块同时构建依赖当前模块的其他模块</li><li>-rf resume –from：在计算出的反应堆顺序基础上，从指定模块开始向后构建</li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分享 </tag>
            
            <tag> 导航 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Maven聚合和继承的关系</title>
      <link href="2020/12/23/maven/"/>
      <url>2020/12/23/maven/</url>
      
        <content type="html"><![CDATA[<h1 id="Maven聚合和继承的关系"><a href="#Maven聚合和继承的关系" class="headerlink" title="Maven聚合和继承的关系"></a>Maven聚合和继承的关系</h1><p>​    虽然聚合模块和父模块经常<strong>合二为一</strong>，但是聚合和继承是两个不同的概念，其实是没有什么关系的。</p><p><strong>聚合模块</strong>知道它聚合了哪些模块，但是被聚合的模块不知道聚合模块的存在；</p><p><strong>父模块</strong>不知道子模块的存在，但是子模块都必须知道自己的父模块是谁。</p><p>可以用下图来表示这两个不同的概念：</p><a id="more"></a><p>补充：可继承的POM元素如下（红色为常用的元素）</p><ul><li>groupId：项目组ID，项目坐标的核心元素。</li><li>version：项目版本，项目坐标的核心因素。</li><li>description：项目的描述信息。</li><li>organization：项目的组织信息。</li><li>inceptionYear：项目的创始年份。</li><li>url：项目的URL地址。</li><li>developers：项目的开发者信息。</li><li>contributors：项目的贡献者信息。</li><li>distributionManagement：项目的部署配置。</li><li>issueManagement：项目的缺陷跟踪系统信息。</li><li>ciManagement：项目的持续集成系统信息。</li><li>scm：项目的版本控制系统。</li><li>malilingLists：项目的邮件列表信息。</li><li>properties：自定义的Maven属性。</li><li>dependencies：项目的依赖配置。</li><li>dependencyManagement：项目的依赖管理配置。</li><li>repositories：项目的仓库配置。</li><li>build：包括项目的源码目录配置、输出目录配置、插件配置、插件管理配置等。</li><li>reporting：包括项目的报告输出目录配置、报告插件配置等。</li></ul><p><strong>反应堆</strong></p><p>对于单模块Maven项目而言，反应堆就是整个项目本身。而对于多模块的Maven项目，反应堆是整个项目所有模块组成的一个构建结构，包含模块之间继承与依赖的关系。模块间的依赖关系会将反应堆构成一个有向非循环图。</p><p><strong>裁剪反应堆</strong></p><p>  一般来说，我们要么构建整个项目，要么构建单个模块，但是有些时候，我们会想要仅仅构建这个完整的反应堆中的某些模块，所以我们需要裁剪反应堆。</p><p>  Maven提供的如下几条裁剪反应堆命令：</p><ul><li>-pl –projects：构建指定的模块，多个模块用,分隔，不会构建所列模块的依赖</li><li>-am alse mak：``构建模块同时构建所列模块依赖的其他模块</li><li>-amd alse make dependency：构建模块同时构建依赖当前模块的其他模块</li><li>-rf resume –from：在计算出的反应堆顺序基础上，从指定模块开始向后构建</li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分享 </tag>
            
            <tag> 导航 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2020/12/23/hello-world/"/>
      <url>2020/12/23/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Spring-AOP的简单概述</title>
      <link href="2020/10/03/aop/"/>
      <url>2020/10/03/aop/</url>
      
        <content type="html"><![CDATA[<h3 id="AOP"><a href="#AOP" class="headerlink" title="AOP"></a>AOP</h3><h5 id="一：AOP概述"><a href="#一：AOP概述" class="headerlink" title="一：AOP概述"></a>一：AOP概述</h5><p>OOP：以功能模块为核心，代码由上至下的顺序  纵向开发</p><p>AOP：Aspect Oriented Programming 面向切面编程。 横向开发</p><a id="more"></a><p>AOP 的优点：</p><ul><li><p>降低模块之间的耦合度。</p></li><li><p>使系统更容易扩展。</p></li><li><p>更好的代码复用。</p></li><li><p>非业务代码更加集中，不分散，便于统一管理。（显示）</p><ul><li>业务代码：功能模块要完成的任务</li><li>非业务代码：功能模块中的辅助代码（比如日志的打印，代码的运行测试）</li></ul></li><li><p>业务代码更加简洁存粹，不参杂其他代码的影响。</p></li></ul><p>AOP 是对面向对象编程的一个补充，在运行时，动态地将代码切入到类的指定方法、指定位置上的编程思想就是面向切面编程。将不同方法的同一个位置抽象成一个切面对象，对该切面对象进行编程就是 AOP。</p><h5 id="二：要点概述（要记得）"><a href="#二：要点概述（要记得）" class="headerlink" title="二：要点概述（要记得）"></a>二：要点概述（要记得）</h5><ul><li>切面：横切关注点被模块化的抽象对象。</li><li>通知：切面对象完成的工作。</li><li>目标：被通知的对象，即被横切的对象。</li><li>代理：切面、通知、目标混合之后的对象。</li><li>连接点：通知要插入业务代码的具体位置。</li><li>切点：AOP 通过切点定位到连接点。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的第一篇博客</title>
      <link href="2020/10/03/my-first-blog-post/"/>
      <url>2020/10/03/my-first-blog-post/</url>
      
        <content type="html"><![CDATA[<h1 id="入门"><a href="#入门" class="headerlink" title="入门"></a>入门</h1><p>NexT用户文档–开始使用</p><ul><li><p><a href="https://theme-next.js.org/docs/">DOCS</a></p></li><li></li><li><p>入门</p></li></ul><p><a href="https://hexo.io/">六o</a>是一个快速而强大的静态博客生成框架，它基于<a href="https://nodejs.org/">Node.js</a>。通过使用Hexo，您可以使用Markdown轻松编写文章，并且除了Markdown的语法外，还可以使用<a href="https://hexo.io/docs/tag-plugins">标签插件</a>由Hexo提供，用于简单插入特殊格式的内容。在此页面中，我们假设您已经安装了Hexo并使用它创建了一个站点。</p><p>您可以访问<a href="https://hexo.io/docs/">Hexo Docs</a>了解如何安装Hexo。确保环境中的Node.js和Hexo版本高于<a href="https://github.com/next-theme/hexo-theme-next#readme">最低要求</a> NexT主题，然后继续以下步骤。</p><a id="more"></a><h3 id="组态"><a href="#组态" class="headerlink" title="组态"></a>组态</h3><p>Hexo使用了两个主要的配置文件，都称为<code>_config.yml</code>：</p><ol><li>第一个在 站点根目录，其中包含Hexo的配置。</li><li>第二个在 主题根目录，由NexT提供，包含主题的配置。</li></ol><p>我们称第一个- 站点配置文件和第二个– 主题配置文件。<br>但是，我们不建议直接修改主题配置文件。通过升级NexT主题时，它经常会陷入冲突状态<code>git pull</code>，或者在升级到新版本时，需要手动合并配置。对于Hexo 5.0或更高版本，可以通过npm安装主题，并且修改主题也很困难。主题配置文件在中<code>node_modules</code>。</p><p>为了解决此问题，我们建议使用“<a href="https://theme-next.js.org/docs/getting-started/configuration.html">备用主题配置”</a>功能来配置主题NexT。</p><h3 id="NexT安装"><a href="#NexT安装" class="headerlink" title="NexT安装"></a>NexT安装</h3><p>安装Hexo主题很容易：您只需下载NexT主题，然后将主题文件夹复制到以下<code>themes</code>目录中站点根目录 并在 站点配置文件 你的 主题根目录。具体步骤如下：</p><h4 id="下载NexT"><a href="#下载NexT" class="headerlink" title="下载NexT"></a>下载NexT</h4><ul><li><a href="https://theme-next.js.org/docs/getting-started/#downloading-next-1">使用 <code>npm</code></a></li><li><a href="https://theme-next.js.org/docs/getting-started/#downloading-next-2">使用 <code>git</code></a></li><li><a href="https://theme-next.js.org/docs/getting-started/#downloading-next-3">下载压缩文件</a></li></ul><p>如果您使用的是Hexo 5.0或更高版本，则最简单的安装方法是通过npm。</p><p>打开终端，更改为Hexo 站点根目录 并安装NexT主题：</p><pre><code>$ cd hexo-site $ npm install hexo-theme-next</code></pre><p>如果需要其他安装版本，也可以阅读<a href="https://theme-next.js.org/docs/getting-started/installation.html">详细的安装说明</a>。</p><p>如果您仍在使用NexT版本5，则可以阅读<a href="https://theme-next.js.org/docs/getting-started/update-from-v5.html">有关从v5升级到v8的说明</a>。</p><h4 id="启用NexT"><a href="#启用NexT" class="headerlink" title="启用NexT"></a>启用NexT</h4><p>像所有Hexo主题一样，下载后，打开 站点配置文件，找到<code>theme</code>部分，然后将其值更改为<code>next</code>（或另一个主题目录名称）。</p><pre><code>hexo / _config.yml主题： 下一个</code></pre><p>现在，您已经安装了NexT主题并启用了它。以下步骤将帮助您验证是否正确启用了NexT。</p><h4 id="检查NexT"><a href="#检查NexT" class="headerlink" title="检查NexT"></a>检查NexT</h4><p>建议先<code>hexo clean</code>清理Hexo的缓存。<br>然后使用debug参数（通过添加<code>--debug</code>）启动Hexo本地服务器，整个命令为<code>hexo s --debug</code>。您可以在运行时看到输出，如果发现问题，则可以使用输出帮助其他人更好地定位错误。打印时：</p><pre><code>INFO Hexo在http：// localhost：4000 /上运行。按Ctrl + C停止。</code></pre><p>现在，您可以<code>http://localhost:4000</code>在浏览器中打开，并检查网站是否正常运行。</p><p>如果发现您的站点看起来像这张图片，则说明您已正确安装它。这是默认的NexT方案– Muse。<br><img src="https://theme-next.js.org/images/docs/next-default-scheme.png" alt="默认方案–缪斯"></p><h3 id="六方配置"><a href="#六方配置" class="headerlink" title="六方配置"></a>六方配置</h3><p>中的以下设置 站点配置文件 对优化您的网站非常有帮助。</p><h4 id="配置作者"><a href="#配置作者" class="headerlink" title="配置作者"></a>配置作者</h4><p>编辑 站点配置文件并将其值设置<code>author</code>为您的昵称。</p><pre><code>hexo / _config.yml＃网站作者：</code></pre><h4 id="配置说明"><a href="#配置说明" class="headerlink" title="配置说明"></a>配置说明</h4><p>编辑 站点配置文件并<code>description</code>为您的描述设置值，该描述可以是您喜欢的句子。</p><pre><code>hexo / _config.yml＃网站说明：</code></pre><p>之后，我们可以<a href="https://theme-next.js.org/docs/getting-started/deployment.html">配置部署</a>。</p><p>如果一切正常，则在下一步中，我们将更改一些设置，包括<a href="https://theme-next.js.org/docs/theme-settings/">个性化</a>设置和<a href="https://theme-next.js.org/docs/third-party-services/">第三方服务集成</a>。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分享 </tag>
            
            <tag> 导航 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
